// Code generated by entc, DO NOT EDIT.

package stack

import (
	"time"
)

const (
	// Label holds the string label denoting the stack type in the database.
	Label = "stack"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldInstance holds the string denoting the instance field in the database.
	FieldInstance = "instance"
	// FieldVpcID holds the string denoting the vpc_id field in the database.
	FieldVpcID = "vpc_id"
	// FieldPublicIP holds the string denoting the public_ip field in the database.
	FieldPublicIP = "public_ip"
	// FieldPublicDNS holds the string denoting the public_dns field in the database.
	FieldPublicDNS = "public_dns"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldSecurityGroup holds the string denoting the security_group field in the database.
	FieldSecurityGroup = "security_group"
	// FieldKeyPair holds the string denoting the key_pair field in the database.
	FieldKeyPair = "key_pair"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPrivateKey holds the string denoting the private_key field in the database.
	FieldPrivateKey = "private_key"
	// FieldFilepath holds the string denoting the filepath field in the database.
	FieldFilepath = "filepath"
	// EdgeDeployment holds the string denoting the deployment edge name in mutations.
	EdgeDeployment = "deployment"
	// Table holds the table name of the stack in the database.
	Table = "stacks"
	// DeploymentTable is the table that holds the deployment relation/edge.
	DeploymentTable = "stacks"
	// DeploymentInverseTable is the table name for the Deployment entity.
	// It exists in this package in order to avoid circular dependency with the "deployment" package.
	DeploymentInverseTable = "deployments"
	// DeploymentColumn is the table column denoting the deployment relation/edge.
	DeploymentColumn = "deployment_stack"
)

// Columns holds all SQL columns for stack fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldInstance,
	FieldVpcID,
	FieldPublicIP,
	FieldPublicDNS,
	FieldUsername,
	FieldSecurityGroup,
	FieldKeyPair,
	FieldName,
	FieldPrivateKey,
	FieldFilepath,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "stacks"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"deployment_stack",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
